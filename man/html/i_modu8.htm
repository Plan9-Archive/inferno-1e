<html><head><title>Introduction to Limbo Modules</title></head>
<body bgcolor=white>
 
<a href="index.htm"><img src="Top.gif" alt="[Top]" align=bottom></a> <a href="i_modu7.htm"><img src="Previous.gif" alt="[Prev]" align=bottom></a>
<hr><br>
 
<a name="844269">
<center><h1> Introduction</h1></center>
</a><a name="847654">
The modules are accessed by including the appropriate interface files into Limbo program code. See <em>The Limbo Programming Language</em> in the <em>Inferno User's Guide </em>for information about the syntax for including modules in an application. <p>
</a><a name="844272">
Prior to calling a module's functions, an application must <em>load</em> the module. The application uses the resulting handle as the module qualifier. The examples shown in the following Synopsis illustrate the style. It will usually be necessary to qualify names with the appropriate module pointer or to <em>import</em> the types and functions. The program examples shown in this manual assume the names are accessible in the current scope.<p>
</a><a name="844273">
Although many modules are self-contained, dependencies may exist. The system module (<em>Sys</em>), for example, provides basic services that some other modules require.<p>
</a><a name="844274">
Sometimes functions are packaged as individual modules but share a single <em>include</em> file. For example, see<kbd> </kbd><em>/include/security.m.</em><p>
</a><a name="844275">
The subsequent chapters contain detailed descriptions of the modules. These descriptions show how to <em>include</em> a module definition during compilation and <em>load</em> an implementation during execution. The program examples also list the functions, abstract data types, and constants. +Although the <em>include</em> files declare these components, the manual pages list them explicitly to facilitate their explanation. In all cases, the enclosing <em>module</em> declaration is assumed so that unqualified identifiers can be used in the text without ambiguity.<p>
</a><a name="848453">
The Limbo modules are identical on any machine that is running Inferno, in either a native mode or emulation mode. This enables Limbo programs to be written and tested on any Inferno system.While the current modules should be sufficient for general application development, special situations, such as particular IR hardware, may require the development of additional modules.<p>
</a><a name="844276">
Some modules are described in a single page, such as <em>regex</em>. Larger modules are divided into several related pages, such as <a href="md_math.htm#840761"><em>Limbo Math Module</em></a>, <a href="md_math1.htm#844309"><em>elem - elementary functions of applied mathematics</em></a>, <a href="md_math2.htm#844413"><em>fp - floating point operations</em></a>, and <em><a href="md_math3.htm#844609"></em><em>linalg - linear algebra primitives</em><em></a>.</em><p>
</a><a name="844289">
<h2> Synopsis</h2>
</a><pre><tt>include "sys.m";
sys:= load Sys Sys-&gt;PATH;

include "draw.m";
draw:= load Draw Draw-&gt;PATH;
include "tk.m";

tk:= load Tk Tk-&gt;PATH;

...
</tt></pre></p>

<a name="844298">
<strong>Generically:</strong><p>
</a>include "<em>module</em>.m";
mod:= load <em>Module</em> <em>Module</em> -&gt;PATH;


<hr><br>
 
<a href="index.htm"><img src="Top.gif" alt="[Top]" align=bottom></a> <a href="i_modu7.htm"><img src="Previous.gif" alt="[Prev]" align=bottom></a>
<hr><br>



<address>
<a href="mailto:infernosupport@lucent.com">infernosupport@lucent.com</a>
</address>

<i>Copyright &#169; 1996,Lucent Technologies, Inc.   All rights
reserved.</i>


<!-- Last updated: 02/08/97 11:49:42 -->

</body>
</html>
